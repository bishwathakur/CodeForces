// #include <bits/stdc++.h>
// using namespace std;
// #define endl "\n"
// #define int long long

// const int INF = 2e18;
// const int M = 1e9 + 7;

// #define yes cout << "YES\n"
// #define no cout << "NO\n"
// #define pb push_back
// #define pii pair<int, int>
// #define vi vector<int>
// #define vvi vector<vector<int>>
// #define vii vector<pair<int, int>>
// #define ff first
// #define ss second
// #define setbits(n)  __builtin_popcountll(n)
// #define f(i, n) for (int i = 0; i < n; i++)
// #define fo(i, a, b) for (int i = a; i < b; i++)
// #define ia(a, n) \
//     int a[n];    \
//     f(i, n) cin >> a[i]
// #define iv(v, n)      \
//     vector<int> v(n); \
//     f(i, n) cin >> v[i]
// #define vout(v)                \
//     for (auto i : v)           \
//     {                          \
//         std::cout << i << " "; \
//     }
// #define INF INT64_MAX
// #define fastIO                   \
//     ios::sync_with_stdio(false); \
//     cin.tie(NULL);               \
//     cout.tie(NULL);              \
//     cout.precision(numeric_limits<double>::max_digits10);
// #define srt(v) sort(v.begin(), v.end())
// #define rsrt(v) sort(v.rbegin(), v.rend())
// #define newline cout << endl
// #define all(v) (v).begin(), (v).end()

// int gcd(int a, int b)
// {
//     if (b == 0)
//     {
//         return a;
//     }
//     return gcd(b, a % b);
// }
// int lcm(int a, int b)
// {
//     return a * b / gcd(a, b);
// }
// int fact(int n)
// {
//     if (n == 0)
//         return 1;
//     long res = 1;
//     for (int i = 2; i <= n; i++)
//         res = res * i;
//     return res;
// }
// int nCr(int n, int r)
// {
//     return fact(n) / (fact(r) * fact(n - r));
// }

// int t[32][32];

// void init_t(){
//     for (int i = 1; i < 32; i++)
//     {
//         t[i][1] = i - 1;
//         t[1][i] = i - 1;
//     }
//     t[1][1] = 0;
//     for (int i = 2; i < 32; i++)
//     {
//         for (int j = 2; j < 32; j++)
//         {
//             t[i][j] = 1 + min(t[i - 1][j], t[i][j - 1]);
//         }
//     }
// }

// int maxTurns(int h, int w){
//     if(h==1 && w==1)return 0;
//     if(t[h][w]!=-1)return t[h][w];
//     int res = INF;

//     if(h>1){
//         int r = maxTurns(h/2,w);
//         int l = maxTurns((h+1)/2,w);
//         res = min(res, 1+ max(r,l));
//     }
//     if(w>1){
//         int r = maxTurns(h,w/2);
//         int l = maxTurns(h,(w+1)/2);
//         res = min(res, 1 + max(r, l));
//     }
//     return t[h][w] = res;
// }

// int modify(int x)
// {
//     int res = 0;
//     while ((1LL << res) < x)
//         res++;
//     return res + 1;
// }
// // Main
// void solve()
// {
//     int n,m,a,b;
//     cin >> n >> m >> a >> b;

//     //code here
//     int h = max(a, n-a+1);
//     int w = max(b, m-b+1);

//     int ma = modify(h);
//     int mb = modify(w);

//     cout<<maxTurns(ma,mb);
//     // cout << t[ma][mb];
//     newline;
//     return;

// }

// int32_t main()
// {
// #ifdef ONLINE_JUDGE
//     auto begin = chrono::high_resolution_clock::now();
// #endif

//     fastIO;
//     memset(t,-1,sizeof(t));
//     // init_t();

//     int t;
//     cin >> t;
//     // t = 1;
//     while (t--)
//     {
//         solve();
//     }
// #ifdef ONLINE_JUDGE
//     auto end = chrono::high_resolution_clock::now();
//     cerr << fixed << setprecision(4);
//     cerr << "Execution time: "
//          << chrono::duration_cast<chrono::duration<double>>(end - begin).count()
//          << " seconds" << endl;
// #endif

//     return 0;
// }